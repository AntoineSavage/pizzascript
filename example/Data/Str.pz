# Data.Str

# escapes:
# \" -> double quote
# \\ -> backslash
# \a -> bell/alert
# \b -> backspace
# \d -> delete
# \e -> escape
# \f -> form feed
# \n -> newline
# \r -> carriage return
# \s -> space
# \t -> tab
# \v -> vertical tab
# \0 -> null byte
# \xDD - one hex byte, ex: \x20
# \uDDDD - one unicode hex codepoint, ex: \u0020
# \UDDDDD - one extended unicode hex codepoint, ex: \U1F600

# LEXER_TEST_START

# text strings
""
"abc123ABC"
"\\\a\b\d\e\f\n\r\s\t\v\0\x20\u0020\U00020

"\xFF" # binary string (\xFF is not utf8)
"\x20" # text

# LEXER_TEST_END

(str x)     # -> (showable.show x) # showable protocol
(str x y z) # -> apply showable.show recursively on each element and concat the result