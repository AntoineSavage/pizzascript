# base.pz

# useful functions
(def id (func (x) x))
(def flip (func (f x y) (f y x)))

(def quote (func 'quote (x) x))
(def unquote (func 'unquote (x) x))
(def deep_quote (func 'deep_quote (x) x))
(def deep_unquote (func 'deep_unquote (x) x))

# control structures
(def if (func 'quote (pq tq fq)
    # can be any type
    (def p_any (deep_unquote pq))

    # can be 'false or 'true
    (def p (not (not p_any)))

    # tq or fq according to p
    (def rq (or
        (and p tq)
        (and (not p) fq)
    ))

    # evaluate result
    (deep_unquote rq)
))

# lists
(def list (func args args))
(def map (func (f xs)
    (if (empty xs)
        xs
        (cons
            (f (head xs))
            (tail xs)
        )
    )
))