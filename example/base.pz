# base.pz

# add temporary 'def to current context
# this will be replaced later on with validating version
# in the meantime, we must manually ensure no duplicate definitions
((func c1 'eval () [
    (put 'def
        (func c2 'quote (k v) [   
            (put k ((func 'deep_unquote (x) x) v) c2)
            ()
        ])
        c1
    )
    () # return nothing
]))

# useful functions
(def id (func (x) x))
(def flip (func (f x y) (f y x)))

(def quote (func 'quote (x) x))
(def unquote (func 'unquote (x) x))
(def deep_quote (func 'deep_quote (x) x))
(def deep_unquote (func 'deep_unquote (x) x))

# control structures
(def if (func 'quote (pq tq fq)
    # can be any type
    (def p_any (deep_unquote pq))

    # can be 'false or 'true
    (def p (not (not p_any)))

    # tq or fq according to p
    (def rq (or
        (and p tq)
        (and (not p) fq)
    ))

    # evaluate result
    (deep_unquote rq)
))

# redefine 'def with validation
(def def (func ctx 'quote (k v) [
    (if (contains k ctx)
        (put '__ABORT_EVAL_WITH__ (str "Identifier already defined: " k) ctx)
        (put k (deep_unquote v) ctx)
    )
    () # return nothing
]))

# lists
(def list (func args args))
(def map (func (f xs)
    (if (empty xs)
        xs
        (cons
            (f (head xs))
            (tail xs)
        )
    )
))

# dictionaries
# TODO